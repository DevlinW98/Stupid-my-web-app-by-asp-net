@model IEnumerable<WebApplication1.Models.Post>

@section Styles {
    <link rel="stylesheet" href="~/css/card-pop.css" />
    <style>
        .showcomment {
            max-height: 200px;
            overflow-y: auto;
        }
        .comment-post {
            border-bottom: 1px solid #eee;
            padding: 10px 0;
        }
    </style>
}

@{
    var Id = ViewBag.Id;
    var userStatus = ViewBag.UserStatus;
}

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script>
        $(document).ready(function() {
            // Function to scroll to bottom of comments
            function scrollToBottomOfComments(postId) {
                var commentSection = $('.showcomment[data-post-id="' + postId + '"]');
                commentSection.scrollTop(commentSection[0].scrollHeight);
            }

            // Scroll to bottom of comments on page load
            $('.showcomment').each(function() {
                var postId = $(this).data('post-id');
                scrollToBottomOfComments(postId);
            });

            $('.pop-comment form').on('submit', function(e) {
                e.preventDefault();

                var form = $(this);
                var actionUrl = form.attr('action');
                var postId = form.attr('data-post-id');
                var commentText = form.find('input[name="CommentText"]').val();

                $.ajax({
                    type: 'POST',
                    url: actionUrl,
                    data: {
                        CommentText: commentText,
                        id: postId
                    },
                    success: function(response) {
                        if (response.success) {
                            var commentSection = $('.showcomment[data-post-id="' + postId + '"]');
                            var noCommentsMessage = commentSection.find('.no-comments-message');
                            
                            if (noCommentsMessage.length) {
                                noCommentsMessage.remove();
                            }

                            var newComment = `
                                <div class="comment-post">
                                    <p class="comment-user">${response.username}:</p>
                                    <p class="comment-description">${response.comment.commentText}</p>
                                </div>
                            `;
                            commentSection.append(newComment);
                            form.find('input[name="CommentText"]').val('');
                            scrollToBottomOfComments(postId);
                        } else {
                            console.error("Response not successful:", response);
                        }
                    },
                    error: function(xhr) {
                        console.error(xhr.responseText);
                        alert("An error occurred while submitting your comment.");
                    }
                });
            });
        });
    </script>
}

<div class="content">
    @foreach (var post in Model) {
        <div class="card">
            <a href="#popup-@post.ID" class="card-link">
                <img src="@post.Post_img" alt="Board game image">
                <h3 class="Location">@post.Post_name</h3>
                <h3 class="user">@(ViewBag.Usernames.ContainsKey(post.Post_by_id) ? ViewBag.Usernames[post.Post_by_id] : "Unknown User")</h3>
                <p>Date : @post.Date</p>
                <p>Amount : @post.Participants / @post.Capacity</p>
            </a>
            <a class="button" href="#popup-@post.ID">Let me Pop up</a>
        </div>
        
        <div id="popup-@post.ID" class="overlay">
            <div class="popup">
                <a class="close" href="#">&times;</a>
                <div class="pop-content">
                    <div class="pop-image">
                        <img src="@post.Post_img" alt="Post Image">
                    </div>
                    <div class="pop-details">
                        <h2>Post Name: @post.Post_name</h2>
                        <h3>Post user : @(ViewBag.Usernames.ContainsKey(post.Post_by_id) ? ViewBag.Usernames[post.Post_by_id] : "Unknown User")</h3>
                        <p>Location : @post.Location</p>
                        <p>Date : @post.Date</p> 
                        <p>Amount : @post.Participants / @post.Capacity</p>
                        <p>@post.Post_Detail</p>
                    </div>
                    @if(Id == post.Post_by_id){
                        <div class="buttnozone">
                            <a href="#" class="view-button">Edit</a>
                            <a href="#" class="view-button">view</a>
                        </div>
                    }else{
                        <div class="buttnozone">
                            <a href="#" class="view-button">Request</a>
                        </div>
                    }
                </div>

                <div class="showcomment" data-post-id="@post.ID">
    @{
        var comments = ViewBag.Comments as IEnumerable<WebApplication1.Models.Comment>;
    }
    @if (comments != null && comments.Any(c => c.PostID == post.ID))
    {
        foreach (var comment in comments.Where(c => c.PostID == post.ID).OrderBy(c => c.CreatedAt))
        {
            <div class="comment-post">
                <p class="comment-user">@(ViewBag.Usernames.ContainsKey(comment.UserID) ? ViewBag.Usernames[comment.UserID] : "Unknown User") :</p>
                <p class="comment-description">@comment.CommentText</p>
            </div>
        }
    }
    else
    {
        <p class="no-comments-message">No comments yet.</p>
    }
</div>

                <div class="pop-comment">
                    <form method="post" asp-controller="Home" asp-action="CreateComment" data-post-id="@post.ID">
                        <input type="text" name="CommentText" placeholder="Leave a comment..." required>
                        <button type="submit">Submit</button>
                    </form>
                </div>
            </div>
        </div>
    }
</div>